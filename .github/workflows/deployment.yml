name: Deployment Workflow

on:
  workflow_dispatch:
    inputs:
        branch:
            description: 'Branch to deploy'
            required: true
            default: 'main'
        environment:
            description: 'Environment to deploy to'
            required: true
            default: 'dev'
            type: choice
            options:
                - dev
                - qua
                - prod
        region:
            description: 'AWS region'
            required: true
            default: 'us-east-1'
            type: choice
            options:
                - us-east-1
                - us-west-2
                - eu-west-1

run-name: Deploy to ${{ github.event.inputs.environment }} in region ${{ github.event.inputs.region }} from branch ${{ github.event.inputs.branch }}

jobs:
    ecs-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                ref: ${{ github.event.inputs.branch }}

            - name: Set up AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ github.event.inputs.region }}

            - name: Login to ECR
              id: ecr-login
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build and push Docker image
              run: |
                docker build -t my-app:${{ github.sha }} ./applications
                docker tag my-app:${{ github.sha }} ${{ steps.ecr-login.outputs.registry }}/my-app:${{ github.sha }}
                docker push ${{ steps.ecr-login.outputs.registry }}/my-app:${{ github.sha }}

    terraform-deploy:
        runs-on: ubuntu-latest
        needs: ecs-deploy
        defaults:
            run:
                working-directory: terraform
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                ref: ${{ github.event.inputs.branch }}

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v1

            - name: Terraform Init
              run: terraform init

            - name: Terraform Plan
              run: terraform plan -out=tfplan -var "db_user=${{ secrets.DB_USER }}" -var "db_password=${{ secrets.DB_PASSWORD }}" -var="environment=${{ github.event.inputs.environment }}" -var="region=${{ github.event.inputs.region }}"
              
            - name: Terraform Apply
              run: terraform apply -auto-approve tfplan
              env:
                    TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
                    TF_VAR_api_key: ${{ secrets.API_KEY }}
            